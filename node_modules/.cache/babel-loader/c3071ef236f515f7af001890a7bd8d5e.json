{"ast":null,"code":"var _jsxFileName = \"/home/oleksii/Code/web_dev/goit/goit-react-hw-04-phonebook/src/components/Form/Form.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport styles from './Form.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Form(_ref) {\n  _s();\n\n  let {\n    onSubmit\n  } = _ref;\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const changeInputName = event => {\n    setName(event.currentTarget.value);\n  };\n\n  const changeInputNumber = event => {\n    setNumber(event.currentTarget.value);\n  };\n\n  const formSubmit = event => {\n    event.preventDefault();\n    const data = {\n      name,\n      number\n    };\n    onSubmit(data);\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: styles.label,\n      children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n        title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n        required: true,\n        value: name,\n        onChange: changeInputName,\n        className: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: styles.label,\n      children: [\"Number\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        name: \"number\",\n        pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n        title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n        required: true,\n        value: number,\n        onChange: changeInputNumber,\n        className: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Form, \"mgYk2feJE7Nd8w88JvjzPww6GtA=\");\n\n_c = Form;\n;\nForm.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string\n};\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useState","PropTypes","styles","Form","onSubmit","name","setName","number","setNumber","changeInputName","event","currentTarget","value","changeInputNumber","formSubmit","preventDefault","data","reset","label","input","propTypes","string"],"sources":["/home/oleksii/Code/web_dev/goit/goit-react-hw-04-phonebook/src/components/Form/Form.js"],"sourcesContent":["import {useState} from \"react\";\nimport PropTypes from 'prop-types';\nimport styles from './Form.module.css';\n\nfunction Form({onSubmit}){\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n    \n\n  const changeInputName = event => {\n    setName(event.currentTarget.value);\n  };\n  \n  const changeInputNumber = event => {\n    setNumber(event.currentTarget.value);\n      };\n\n    const formSubmit = event => {\n        event.preventDefault();        \n        const data = { name, number };\n        onSubmit(data);\n        reset();\n    };\n    \n    const reset = () => {\n      setName('');\n      setNumber('');\n    };\n    \n   \n        return (\n            <form onSubmit={formSubmit} >\n          <label className={styles.label}>\n            Name\n              <input\n                type=\"text\"\n                name=\"name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                required\n                value={name}\n                onChange={changeInputName}\n                className={styles.input}\n              />\n          </label>\n          <label className={styles.label}>\n            Number\n            <input\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n              value={number}\n                onChange={changeInputNumber}\n                className={styles.input}\n            />\n          </label>\n          <button type=\"submit\">Add contact</button>\n        </form>\n        );\n    \n};\n\nForm.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n\nexport default Form;"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,SAASC,IAAT,OAAyB;EAAA;;EAAA,IAAX;IAACC;EAAD,CAAW;EAEvB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;;EAGA,MAAMS,eAAe,GAAGC,KAAK,IAAI;IAC/BJ,OAAO,CAACI,KAAK,CAACC,aAAN,CAAoBC,KAArB,CAAP;EACD,CAFD;;EAIA,MAAMC,iBAAiB,GAAGH,KAAK,IAAI;IACjCF,SAAS,CAACE,KAAK,CAACC,aAAN,CAAoBC,KAArB,CAAT;EACG,CAFL;;EAIE,MAAME,UAAU,GAAGJ,KAAK,IAAI;IACxBA,KAAK,CAACK,cAAN;IACA,MAAMC,IAAI,GAAG;MAAEX,IAAF;MAAQE;IAAR,CAAb;IACAH,QAAQ,CAACY,IAAD,CAAR;IACAC,KAAK;EACR,CALD;;EAOA,MAAMA,KAAK,GAAG,MAAM;IAClBX,OAAO,CAAC,EAAD,CAAP;IACAE,SAAS,CAAC,EAAD,CAAT;EACD,CAHD;;EAMI,oBACI;IAAM,QAAQ,EAAEM,UAAhB;IAAA,wBACF;MAAO,SAAS,EAAEZ,MAAM,CAACgB,KAAzB;MAAA,gCAEI;QACE,IAAI,EAAC,MADP;QAEE,IAAI,EAAC,MAFP;QAGE,OAAO,EAAC,wHAHV;QAIE,KAAK,EAAC,wIAJR;QAKE,QAAQ,MALV;QAME,KAAK,EAAEb,IANT;QAOE,QAAQ,EAAEI,eAPZ;QAQE,SAAS,EAAEP,MAAM,CAACiB;MARpB;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADE,eAcF;MAAO,SAAS,EAAEjB,MAAM,CAACgB,KAAzB;MAAA,kCAEE;QACE,IAAI,EAAC,KADP;QAEE,IAAI,EAAC,QAFP;QAGE,OAAO,EAAC,wFAHV;QAIE,KAAK,EAAC,8FAJR;QAKE,QAAQ,MALV;QAME,KAAK,EAAEX,MANT;QAOI,QAAQ,EAAEM,iBAPd;QAQI,SAAS,EAAEX,MAAM,CAACiB;MARtB;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAdE,eA2BF;MAAQ,IAAI,EAAC,QAAb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QA3BE;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAgCP;;GA3DQhB,I;;KAAAA,I;AA2DR;AAEDA,IAAI,CAACiB,SAAL,GAAiB;EACff,IAAI,EAAEJ,SAAS,CAACoB,MADD;EAEfd,MAAM,EAAEN,SAAS,CAACoB;AAFH,CAAjB;AAKA,eAAelB,IAAf"},"metadata":{},"sourceType":"module"}